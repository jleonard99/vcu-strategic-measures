define recipe-template-shared
	--wrap-before="# AUTOGENERATED from recipe-template-shared " \
	--wrap-before="params = list()" \
	--wrap-before="params[['build.root']] = '$(word 1,$(subst ., ,$(@)))'" \
	--wrap-before="params[['build.file']] = '$(@)'" \
	--wrap-before="if(exists('build.file')) params[['build.file']] = build.file" \
	--wrap-before="if(exists('build.options')) params[['build_options']] = build.options" \
	--wrap-before="params[['build.time']]     = Sys.time()" \
	--wrap-before="params[['build.version']]  = '$(build_version)'" \
	--wrap-before="params[['build.folder']]   = '$(build_folder)'" \
	--wrap-before="params[['R_VERSION']]   = '$(R_VERSION)'" \
	--wrap-before="params[['PDFTEX_VERSION']]   = '$(PDFTEX_VERSION)'" \
	--wrap-before="# " \
	--wrap-before="params[['param1']] = '$(call arg.n,$(@),1)'" \
	--wrap-before="params[['param2']] = '$(call arg.n,$(@),2)'" \
	--wrap-before="params[['param3']] = '$(call arg.n,$(@),3)'" \
	--wrap-before="params[['param4']] = '$(call arg.n,$(@),4)'" \
	--wrap-before="params[['param5']] = '$(call arg.n,$(@),5)'" \
	--wrap-before="params[['param6']] = '$(call arg.n,$(@),6)'" \
	--wrap-before="# " \
	--wrap-before="library(knitr)" \
	--wrap-before="library(markdown)" \
	--wrap-before="options(markdown.HTML.options = markdownHTMLOptions(default=TRUE)[!markdownHTMLOptions(default=TRUE) %in% c(\"base64_images\")])" \
	--wrap-before="options(markdown.HTML.stylesheet = '$(TMPDIR)$($(word 1,$(subst -, ,$(subst ., ,$(@)))).stylesheet)')" \
	--wrap-before="# " \
	--wrap-before="setwd(params[['build.folder']])" 
endef


define recipe-template-to-rparams-3
	@echo [local] Writing RParams-3 file: $(@)
	@$(REPORTER) wrap \
	--no-wrap-in=$(word 1,$(subst -, ,$(subst ., ,$(@))))-template.r \
	--no-wrap-in=$(firstword $(^)) \
	--wrap-out=$(@) \
	$(recipe-template-shared) \
	--wrap-before="# " \
	--wrap-before="# AUTOGENERATED from recipe-template-to-rparams" \
	--wrap-before="# " \
	--wrap-before="params[['unit.abbr']] = '$(word 2,$(subst -, ,$(subst ., ,$(@))))'" \
	--wrap-before="params[['unit.shortname']] = '$($(word 2,$(subst -, ,$(subst ., ,$(@))))_shortname)'" \
	--wrap-before="params[['unit.longname']] = '$($(word 2,$(subst -, ,$(subst ., ,$(@))))_longname)'" \
	--wrap-before="params[['unit.type']] = '$($(word 2,$(subst -, ,$(subst ., ,$(@))))_unittype)'" \
	--wrap-before="params[['unit.parent']] = '$($(word 2,$(subst -, ,$(subst ., ,$(@))))_parent)'" \
	--wrap-before="params[['unit.parent.longname']] = '$($($(word 2,$(subst -, ,$(subst ., ,$(@))))_parent)_longname)'" \
	--wrap-before="# " \
	--wrap-before="opts_chunk\$$set(fig.path='figure/$(firstword $(subst ., ,$(@)))-')" \
	--wrap-before="# " \
	--wrap-before="params[['molten.enrl0.sql']]   = 'enrl0-vcu-$(call arg.3,$(@)).sql'" \
	--wrap-before="params[['molten.enrl0.csv']]   = 'enrl0-vcu-$(call arg.3,$(@)).csv'" \
	--wrap-before="params[['molten.enrl0.rdata']] = 'enrl0-vcu-$(call arg.3,$(@)).Rdata'" \
	--wrap-before="# " \
	--wrap-before=" "
endef
#

define recipe-ppt
	@echo +------------------------------------------------------------------------------
	@echo + recipe-ppt : create powerpoint using template: $(firstword $(^))
	pptwriter.bat \
	--ppt-file=$(TMPDIR)$(@) \
	--pot-file=$(TMPDIR)$(firstword $(^)) \
	--ppt-title="$($(word 1,$(subst -, ,$(subst ., ,$(@)))).ppttitle)" \
	--ppt-subtitle="John Leonard"
#	$(foreach fig,$(workload1_figures),--jpg-file=$(TMPDIR)$(word 1,$(subst ., ,$(@)))-$(fig).jpg ) \
#	$(foreach fig,$(workload1_figures),--jpg-title="$(word 2,$(subst -, ,$(subst ., ,$(@)))) $($(word 1,$(subst -, ,$(subst ., ,$(@))))_$(fig)_title)" ) 
endef

define recipe-email
	@echo + -----------------------------------------------------------------------------
	@echo + recipe-email : $(@)
	@echo + emd target: $(word 1,$(subst ., ,$(subst -, ,$(@))))-$(word 2,$(subst ., ,$(subst -, ,$(@))))-email
	@echo + attachments: $(wordlist 2,$(words $(^)),$(^))
	@echo + body file: $(word 1,$(subst ., ,$(subst -, ,$(@))))-$(word 3,$(subst ., ,$(subst -, ,$(@))))-body.txt
	@echo + report root: $(word 1,$(subst ., ,$(subst -, ,$(@))))
	@echo + year code: $(word 3,$(subst ., ,$(subst -, ,$(@))))
	@echo + subject: $($(word 1,$(subst ., ,$(subst -, ,$(@)))).subject)
	@echo + unit: $(word 2,$(subst ., ,$(subst -, ,$(@))))
	@echo + unit short name:  $($(word 2,$(subst ., ,$(subst -, ,$(@))))_shortname)
	@echo + common CC: $($(word 1,$(subst ., ,$(subst -, ,$(@)))).cc)
	@echo + -----------------------------------------------------------------------------
	$(REPORTER) email \
	--emd-target=$(word 1,$(subst ., ,$(subst -, ,$(@))))-$(word 2,$(subst ., ,$(subst -, ,$(@))))-email \
	$(foreach file,$(wordlist 2,$(words $(^)),$(^)),--attachment=$(file) ) \
	--body-file=$(word 1,$(subst ., ,$(subst -, ,$(@))))-$(word 2,$(subst ., ,$(subst -, ,$(@))))-$(word 3,$(subst ., ,$(subst -, ,$(@)))).html \
	--body-content-type="text/html" \
	--subject="[$(word 1,$(subst ., ,$(subst -, ,$(@))))] $(word 2,$(subst ., ,$(subst -, ,$(@)))) - $($(word 1,$(subst ., ,$(subst -, ,$(@)))).subject)" \
	--additional-cc=$($(word 1,$(subst ., ,$(subst -, ,$(@)))).cc) \
	--footer-file="" \
	--header-file="" \
	--show-subject-in-body=0 \
	--show-recipients-in-body=0 \
	--no-override-distribution=john.leonard@coe.gatech.edu \
	--do-send-mail=1
endef


define recipe-enrl-sql
	@echo [local] Writing - $(@)
	@echo $(call arg.term.by.n.term.list,$(@),7)
	@echo select a.* from gold_enrollments a where time_term_code in \($(call arg.term.by.n.term.sql,$(@),7)\) > $(@)
endef

