\documentclass[10pt,twoside,openright]{report}

\usepackage{vcubrief}
\usepackage{lipsum}

<<label=setup,echo=FALSE>>=
# add R setup code here.  
if(!exists("build.file")) source( 'enrl00-EG-201610.Rparams' ) 
source( 'mylibs.R' )
source( 'molten-utils2.R' )
source( 'report-utils2.R' )
source( 'tile-utils2.R')
graphdev = "png"
graphdpi = 600
options(width=140)

default.tabcolsep = "4pt"
default.table.font.size = "footnotesize"
opts_chunk$set( echo=FALSE,results="asis",size=default.table.font.size,dev=graphdev,dpi=graphdpi,fig.height=2.5 )

for (param in c("unit.abbr","unit.longname","unit.shortname","unit.type")){
  eval(parse(text=paste(param," = params[['",param,"']]",sep="")))
}

orgabbr = unit.abbr
orgtype = unit.type
orgshortname = unit.shortname
orglongname = unit.longname

#date_of_snapshot = as.Date(date())

day_of_snapshot = "9/6/2016"

load(params$molten.enrl0.rdata)

if(unit.type=="college"){
  molten.enrl0 = subset(molten.enrl0,fct_college1==unit.abbr)
}


@


\title{Enrollment measures and metrics}
\author{VCU Engineering/John Leonard}


\renewcommand{\orgtype}{\Sexpr{orgtype}}
\renewcommand{\orgabbr}{\Sexpr{orgabbr}}
\renewcommand{\orgshortname}{\Sexpr{orgshortname}}
\renewcommand{\orglongname}{\Sexpr{orglongname}}
%%\renewcommand{\asofday}{\Sexpr{day_of_snapshot}}

% ===============================================================================================

\begin{document}

\chapter{Key student measure trends}

<<>>=

dd = data.frame(molten.enrl0)

tt = NULL
for (fct in c("fct_degree_level","fct_hybrid_classification","fct_gender_desc","fct_schev_ethnicity_desc","fct_residency_desc")){
  f = as.formula(paste(fct,"~fct_academic_period_desc",sep=""))
  temp = dcast(dd,f,
    fun.aggregate=function(x){round(sum(x,na.rm=TRUE),3)},
#    subset=variable %in% c("moe_hc_fp_code1")&fct_fp_code==focus.month,
#    add.missing=TRUE,
    value.var="moe_students_enrolled",
    margins=fct
  )
  temp$Factor = fct
  names(temp)[1] = "Value"

  temp = temp[,c(ncol(temp),1:(ncol(temp)-1))]
  temp$Pct = temp[,ncol(temp)]/temp[nrow(temp),ncol(temp)]
  temp$Pct = as.percent0( temp$Pct) 
  
  if(is.null(tt)){tt=temp} else {tt=rbind(tt,temp)}
}

tt[nrow(tt)+1,] = tt[nrow(tt),]
tt[nrow(tt),1] = "(all)"

tt$Factor[which(tt$Factor=="fct_degree_level")] = "Degree level"
tt$Factor[which(tt$Factor=="fct_hybrid_classification")] = "Hybrid class"
tt$Factor[which(tt$Factor=="fct_gender_desc")] = "Sex"
tt$Factor[which(tt$Factor=="fct_schev_ethnicity_desc")] = "Ethnicity"
tt$Factor[which(tt$Factor=="fct_residency_desc")] = "Residency"

#tt = tt[which(tt$"(all)">0),]
@

<<"tiles",fig.height=1.1,fig.align="center">>=


  p1 = TileSquare150x150Block(as.number0(tt[nrow(tt),ncol(tt)-1]),"Total.Enrl")
  p2 = TileSquare150x150Block(tt[which(tt$Factor=="Sex"&tt$Value=="Female"),ncol(tt)],"Women")
  p3 = TileSquare150x150Block(tt[which(tt$Factor=="Residency"&tt$Value=="In-state Resident"),ncol(tt)],"VA-resident")
  p4 = TileSquare150x150Block(tt[which(tt$Factor=="Degree level"&tt$Value=="Master's"),ncol(tt)],"Masters")
  p5 = TileSquare150x150Block(tt[which(tt$Factor=="Degree level"&tt$Value=="Doctorate"),ncol(tt)],"Doctorate")

#  p2 = TileSquare150x150Block("$10K","(dummy)")
#  p3 = TileSquare150x150Block("52","(dummy)")
  grid.arrange(p1,p2,p3,p4,p5,ncol=5)

@




<<all.measures,fig.cap="Key enrollment measures">>=

table.caption = opts_current$get("fig.cap")
table.caption = paste(table.caption,", ",names(tt)[3],"-",names(tt)[ncol(tt)-1],sep="")

block.label= opts_current$get("label")
table.label = paste("tab:",block.label,sep='')

all.rows = which(tt[,2]=="(all)")-1

tableDump(tt,sort=F,commas=T,cleanNames=T,rename=F,
  align="llrrrrrrrrrr",
  caption=table.caption,
  size=default.table.font.size,
  label=table.label,
  tabcolsep=default.tabcolsep,
  hline.after=all.rows,
  notes ="Source: ODSMGR.VCU\\_SUMMARY\\_RESIDENCY with local recodes"
)

@

\chapter{Overall enrollment trends}

<<>>=
# construct long and short versions. Combine TIDYR code (for plotting) with RESHAPE2 code (for reporting)

tt_long = (molten.enrl0
 %>% select( fct_academic_period_desc, fct_college_desc1, fct_college1,moe_students_enrolled )
 %>% group_by( "VCU",fct_academic_period_desc, fct_college_desc1,fct_college1 )
 %>% summarise( moe_stu_enrl = sum(moe_students_enrolled))
 %>% group_by( `"VCU"`,fct_academic_period_desc )
 %>% mutate( moe_pct_enrl = moe_stu_enrl / sum(moe_stu_enrl) )
)
names(tt_long)[1] = "VCU"

tt_wide = dcast(
  tt_long,
  VCU+fct_college_desc1+fct_college1~fct_academic_period_desc,
  fun.aggregate=function(x){sum(x,na.rm=TRUE)},
  value.var="moe_stu_enrl",
  margins=c("VCU")
)
tt_wide = tt_wide[,2:length(names(tt_wide))]
names(tt_wide)[1:2] = c("Unit description","Abbr")
tt_wide = tt_wide[c(order(tt_wide[1:(nrow(tt_wide)-1),ncol(tt_wide)],decreasing=TRUE),nrow(tt_wide)),]


tt_summary = (molten.enrl0
  %>% filter( fct_academic_period_desc == max(fct_academic_period_desc) )
  %>% summarise( moe_stu_enrl = sum(moe_students_enrolled) )
)

@


<<"facets",fig.height=4.0,fig.width=7.0,fig.align="center">>=

gg_long = tt_long
gg_long$fct_academic_period_desc = gsub("Fall ","F.",gg_long$fct_academic_period_desc)

g = (ggplot(gg_long,aes(x=fct_academic_period_desc,y=moe_stu_enrl,group=fct_college1))
     + geom_line()
     + geom_point(size=0.5)
     + facet_wrap( ~fct_college_desc1,scales="free_y")
     + geom_hline(yintercept=0, alpha=0)
     + geom_hline(yintercept=c(2000),alpha=0)
     + xlab("Fall terms") + ylab("Enrollment (scales vary by unit)")
#     + scale_y_continuous(limits=c(0,5000))
     + theme(
#         panel.grid.major = element_line(colour = "gray50"),
#         panel.grid.minor = element_blank(),
         panel.background = element_rect(fill="gray90"),
         axis.text.x  = element_text(angle=45, vjust=0.9,hjust=1,size=6),
         axis.title.x = element_text(size=6),
         axis.title.y = element_text(size=6),
         axis.text.y  = element_text(size=6),
         strip.text.x = element_text(size = 6)
     )
)
print(g)

@

<<all.schools,fig.cap="Enrollments">>=

table.caption = opts_current$get("fig.cap")
table.caption = paste(table.caption,", ",names(tt_wide)[3],"-",names(tt_wide)[ncol(tt_wide)],sep="")

block.label= opts_current$get("label")
table.label = paste("tab:",block.label,sep='')

all.rows = which(tt_wide[,1]=="(all)")-1

tableDump(tt_wide,sort=F,commas=T,cleanNames=T,rename=F,
  align="lrrrrrrrrrr",
  caption=table.caption,
  size=default.table.font.size,
  label=table.label,
  tabcolsep=default.tabcolsep,
  hline.after=all.rows,
  notes ="Source: ODSMGR.VCU\\_SUMMARY\\_RESIDENCY"
)

@


\end{document}
